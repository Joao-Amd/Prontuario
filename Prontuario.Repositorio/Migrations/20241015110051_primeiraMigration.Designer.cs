// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Prontuario.Repositorio.Contextos;

#nullable disable

namespace Prontuario.Repositorio.Migrations
{
    [DbContext(typeof(Contexto))]
    [Migration("20241015110051_primeiraMigration")]
    partial class primeiraMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Prontuario.Dominio.Anamneses.Anamnese", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CodigoPaciente")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("CodigoPaciente")
                        .IsUnique();

                    b.ToTable("Anamnese");
                });

            modelBuilder.Entity("Prontuario.Dominio.Anamneses.AnamneseTipoDetalhe", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AnamneseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<Guid>("CodigoAnamnese")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PossuiDoenca")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("AnamneseId");

                    b.ToTable("AnamneseTipoDetalhe");
                });

            modelBuilder.Entity("Prontuario.Dominio.Avaliacoes.Avaliacao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CodigoPaciente")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataHora")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CodigoPaciente");

                    b.ToTable("Avaliacao");
                });

            modelBuilder.Entity("Prontuario.Dominio.Baixas.Baixa", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CodigoPaciente")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataHora")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CodigoPaciente");

                    b.ToTable("Baixa");
                });

            modelBuilder.Entity("Prontuario.Dominio.Enderecos.Endereco", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CodigoOrigem")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CodigoPaciente")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Detalhes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumeroEndereco")
                        .HasColumnType("int");

                    b.Property<string>("Referencia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rua")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Uf")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CodigoPaciente")
                        .IsUnique();

                    b.ToTable("Endereco");
                });

            modelBuilder.Entity("Prontuario.Dominio.Oportunidades.Oportunidade", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CodigoPaciente")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataHora")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CodigoPaciente");

                    b.ToTable("Oportunidade");
                });

            modelBuilder.Entity("Prontuario.Dominio.Pacientes.Paciente", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Genero")
                        .HasColumnType("int");

                    b.Property<int>("GrupoSanguineo")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeMae")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomePai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroCelular")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observacoes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Paciente");
                });

            modelBuilder.Entity("Prontuario.Dominio.Receitas.Receita", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CodigoPaciente")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataHora")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CodigoPaciente");

                    b.ToTable("Receita");
                });

            modelBuilder.Entity("Prontuario.Dominio.Anamneses.Anamnese", b =>
                {
                    b.HasOne("Prontuario.Dominio.Pacientes.Paciente", "Paciente")
                        .WithOne("Anamnese")
                        .HasForeignKey("Prontuario.Dominio.Anamneses.Anamnese", "CodigoPaciente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Paciente");
                });

            modelBuilder.Entity("Prontuario.Dominio.Anamneses.AnamneseTipoDetalhe", b =>
                {
                    b.HasOne("Prontuario.Dominio.Anamneses.Anamnese", null)
                        .WithMany("TipoDetalhe")
                        .HasForeignKey("AnamneseId");
                });

            modelBuilder.Entity("Prontuario.Dominio.Avaliacoes.Avaliacao", b =>
                {
                    b.HasOne("Prontuario.Dominio.Pacientes.Paciente", "Paciente")
                        .WithMany("Avaliacao")
                        .HasForeignKey("CodigoPaciente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Paciente");
                });

            modelBuilder.Entity("Prontuario.Dominio.Baixas.Baixa", b =>
                {
                    b.HasOne("Prontuario.Dominio.Pacientes.Paciente", "Paciente")
                        .WithMany("Baixa")
                        .HasForeignKey("CodigoPaciente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Paciente");
                });

            modelBuilder.Entity("Prontuario.Dominio.Enderecos.Endereco", b =>
                {
                    b.HasOne("Prontuario.Dominio.Pacientes.Paciente", "Paciente")
                        .WithOne("Endereco")
                        .HasForeignKey("Prontuario.Dominio.Enderecos.Endereco", "CodigoPaciente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Paciente");
                });

            modelBuilder.Entity("Prontuario.Dominio.Oportunidades.Oportunidade", b =>
                {
                    b.HasOne("Prontuario.Dominio.Pacientes.Paciente", "Paciente")
                        .WithMany("Oportunidade")
                        .HasForeignKey("CodigoPaciente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Paciente");
                });

            modelBuilder.Entity("Prontuario.Dominio.Receitas.Receita", b =>
                {
                    b.HasOne("Prontuario.Dominio.Pacientes.Paciente", "Paciente")
                        .WithMany("Receita")
                        .HasForeignKey("CodigoPaciente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Paciente");
                });

            modelBuilder.Entity("Prontuario.Dominio.Anamneses.Anamnese", b =>
                {
                    b.Navigation("TipoDetalhe");
                });

            modelBuilder.Entity("Prontuario.Dominio.Pacientes.Paciente", b =>
                {
                    b.Navigation("Anamnese")
                        .IsRequired();

                    b.Navigation("Avaliacao");

                    b.Navigation("Baixa");

                    b.Navigation("Endereco")
                        .IsRequired();

                    b.Navigation("Oportunidade");

                    b.Navigation("Receita");
                });
#pragma warning restore 612, 618
        }
    }
}
